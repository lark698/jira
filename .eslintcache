[{"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\index.tsx":"1","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\reportWebVitals.ts":"2","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\App.tsx":"3","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\list.tsx":"4","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\search-panel.tsx":"5","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\index.tsx":"6","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\context\\index.tsx":"7","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\context\\auth-context.tsx":"8","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\authenticated-app.tsx":"9","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\auth-provider.ts":"10","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\index.tsx":"11","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\login.tsx":"12","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\register.tsx":"13","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\index.ts":"14","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\http.ts":"15","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\lib.tsx":"16","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\user.ts":"17","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\project.ts":"18","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\use-async.ts":"19","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project\\index.tsx":"20","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\index.tsx":"21","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\epic\\index.tsx":"22","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\url.ts":"23","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\util.ts":"24","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\pin.tsx":"25","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\project-popover.tsx":"26","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\project-modal.tsx":"27","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\user-select.tsx":"28","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\id-select.tsx":"29","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\use-optimistic-opinion.ts":"30","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\util.ts":"31","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\kanban.ts":"32","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\kanban-column.tsx":"33","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\task.ts":"34"},{"size":764,"mtime":1614519097744,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":499162500000,"results":"37","hashOfConfig":"36"},{"size":412,"mtime":1614838521883,"results":"38","hashOfConfig":"36"},{"size":3568,"mtime":1616951835077,"results":"39","hashOfConfig":"36"},{"size":1135,"mtime":1616951835108,"results":"40","hashOfConfig":"36"},{"size":1497,"mtime":1616951835077,"results":"41","hashOfConfig":"36"},{"size":391,"mtime":1615367415155,"results":"42","hashOfConfig":"36"},{"size":1988,"mtime":1616951835088,"results":"43","hashOfConfig":"36"},{"size":3115,"mtime":1615819050026,"results":"44","hashOfConfig":"36"},{"size":1492,"mtime":1616951835098,"results":"45","hashOfConfig":"36"},{"size":2337,"mtime":1615822551215,"results":"46","hashOfConfig":"36"},{"size":1271,"mtime":1615367415158,"results":"47","hashOfConfig":"36"},{"size":1620,"mtime":1612928360717,"results":"48","hashOfConfig":"36"},{"size":2576,"mtime":1614844497983,"results":"49","hashOfConfig":"36"},{"size":1706,"mtime":1614844136181,"results":"50","hashOfConfig":"36"},{"size":1497,"mtime":1615822381222,"results":"51","hashOfConfig":"36"},{"size":483,"mtime":1616951835098,"results":"52","hashOfConfig":"36"},{"size":1484,"mtime":1616951507863,"results":"53","hashOfConfig":"36"},{"size":2588,"mtime":1615953838493,"results":"54","hashOfConfig":"36"},{"size":812,"mtime":1616950453444,"results":"55","hashOfConfig":"36"},{"size":798,"mtime":1617114475499,"results":"56","hashOfConfig":"36"},{"size":92,"mtime":1614091082753,"results":"57","hashOfConfig":"36"},{"size":1335,"mtime":1616575980738,"results":"58","hashOfConfig":"36"},{"size":1632,"mtime":1616606290071,"results":"59","hashOfConfig":"36"},{"size":431,"mtime":1614412002554,"results":"60","hashOfConfig":"36"},{"size":1154,"mtime":1615953838498,"results":"61","hashOfConfig":"36"},{"size":3646,"mtime":1616605650836,"results":"62","hashOfConfig":"36"},{"size":301,"mtime":1614245894148,"results":"63","hashOfConfig":"36"},{"size":1381,"mtime":1615855242766,"results":"64","hashOfConfig":"36"},{"size":1292,"mtime":1616096493408,"results":"65","hashOfConfig":"36"},{"size":678,"mtime":1617114758594,"results":"66","hashOfConfig":"36"},{"size":297,"mtime":1617106672816,"results":"67","hashOfConfig":"36"},{"size":565,"mtime":1617114497914,"results":"68","hashOfConfig":"36"},{"size":283,"mtime":1616953042888,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"k461r0",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\index.tsx",[],["145","146"],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\reportWebVitals.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\App.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\list.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\search-panel.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\index.tsx",["147"],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\context\\index.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\context\\auth-context.tsx",["148","149","150","151"],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\authenticated-app.tsx",["152","153"],"import React, {useState} from \"react\";\r\nimport { ProjectListScreen } from \"screens/project-list\";\r\nimport {ProjectScreen} from \"./screens/project\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport styled from \"@emotion/styled\";\r\nimport {ButtonNoPadding, Row} from \"components/lib\";\r\nimport { ReactComponent as SoftwareLogo } from \"assets/software-logo.svg\";\r\nimport { Button, Dropdown, Menu } from \"antd\";\r\nimport { Route, Routes, Navigate } from 'react-router'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { resetRoute } from \"utils\";\r\nimport {ProjectModal} from \"./screens/project-list/project-modal\";\r\nimport {ProjectPopover} from \"./components/project-popover\";\r\n\r\n/**\r\n * grid 和 flex 各自的应用场景\r\n * 1. 要考虑，是一维布局 还是 二维布局\r\n * 一般来说，一维布局用flex，二维布局用grid\r\n * 2. 是从内容出发还是从布局出发？\r\n * 从内容出发：你先有一组内容(数量一般不固定),然后希望他们均匀的分布在容器中，由内容自己的大小决定占据的空间\r\n * 从布局出发：先规划网格(数量一般比较固定)，然后再把元素往里填充\r\n * 从内容出发，用flex\r\n * 从布局出发，用grid\r\n *\r\n */\r\n\r\nexport const AuthenticatedApp = () => {\r\n    const [projectModalOpen, setProjectModalOpen] = useState(false)\r\n\r\n    return (\r\n        <Container>\r\n            <Router>\r\n            <PageHeader />\r\n            <Main>\r\n                    <Routes>\r\n                        <Route path={'/projects'} element={<ProjectListScreen/>}/>\r\n                        <Route path={'/projects/:projectId/*'} element={<ProjectScreen/>}/>\r\n                        <Navigate to={'/projects'}/>\r\n                    </Routes>\r\n            </Main>\r\n            <ProjectModal/>\r\n        </Router>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst PageHeader = () => {\r\n    return <Header between={true}>\r\n        <HeaderLeft gap={true}>\r\n            <ButtonNoPadding  type={\"link\"} onClick={resetRoute}>\r\n                <SoftwareLogo width={\"18rem\"} color={\"rgb(38, 132, 255)\"} />\r\n            </ButtonNoPadding>\r\n            <ProjectPopover />\r\n            <span>用户</span>\r\n        </HeaderLeft>\r\n        <HeaderRight>\r\n            <User/>\r\n        </HeaderRight>\r\n    </Header>\r\n}\r\n\r\nconst User = () => {\r\n    const { logout, user } = useAuth();\r\n    return <Dropdown overlay={\r\n        <Menu>\r\n            <Menu.Item key={'logout'}>\r\n                <Button onClick={logout} type={\"link\"}>\r\n                    登出\r\n                </Button>\r\n            </Menu.Item>\r\n        </Menu>\r\n    }>\r\n        <Button type={\"link\"} onClick={(e) => e.preventDefault()}>\r\n            Hi, {user?.name}\r\n        </Button>\r\n    </Dropdown>\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 6rem 1fr;\r\n  height: 100vh;\r\n`;\r\n\r\n// grid-area 用来给grid子元素起名字\r\nconst Header = styled(Row)`\r\n  padding: 3.2rem;\r\n  box-shadow: 0 0 5px 0 rgba(0,0,0,0);\r\n  z-index: 1;\r\n`;\r\nconst HeaderLeft = styled(Row)``;\r\nconst HeaderRight = styled.div``;\r\nconst Main = styled.main``;","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\auth-provider.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\index.tsx",["154","155"],"import React, {useState} from \"react\"\r\nimport {RegisterScreen} from \"unauthenticated-app/register\";\r\nimport {LoginScreen} from \"unauthenticated-app/login\";\r\nimport {Card, Divider, Button, Typography} from 'antd'\r\nimport styled from '@emotion/styled'\r\nimport logo from 'assets/logo.svg'\r\nimport left from 'assets/left.svg'\r\nimport right from 'assets/right.svg'\r\nimport {Helmet} from 'react-helmet'\r\nimport {useDocumentTitle} from \"../utils\";\r\nimport {ErrorBox} from \"../components/lib\";\r\n\r\nexport const UnauthenticatedApp = () => {\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [error, setError] = useState<Error | null>(null)\r\n    useDocumentTitle('请登录注册以继续')\r\n    return <div style={{display:'flex', justifyContent:'center'}}>\r\n        <Container>\r\n            <Header/>\r\n            <Background/>\r\n        <ShadowCard>\r\n            <Title>\r\n                {isRegister ? '请注册':'请登录'}\r\n                <ErrorBox error={error}/>\r\n            </Title>\r\n        {\r\n            isRegister ? <RegisterScreen onError={setError}/> : <LoginScreen onError={setError}/>\r\n        }\r\n        <Divider/>\r\n            <Button type = {\"link\"} onClick={() => setIsRegister(!isRegister)}>切换到{isRegister ? '登录' : '没有帐户，这里注册'}</Button>\r\n        </ShadowCard>\r\n        </Container>\r\n    </div>\r\n}\r\n\r\nexport const LongButton = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 2.4rem;\r\n  color: rgb(94, 108, 132);\r\n`;\r\n\r\nconst Background = styled.div `\r\n    position:absolute;;\r\n  width:100%;\r\n  height:100%;\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n  background-position: left bottom, right, bottom;\r\n  background-size: calc(((100vw - 40rem) / 2) - 3.2rem), calc(((100vw - 40rem) / 2) - 3.2rem), cover;\r\n  background-image: url(${left}), url(${right});\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex; \r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  `\r\n\r\nconst ShadowCard = styled(Card)`\r\n  width:40rem;\r\n  min-height:56rem;\r\n  padding:3.2rem 4rem;\r\n  box-sizing:border-box;\r\n  box-shadow: raba(0,0,0,0.1) 0 0 10px;\r\n  text-align: center;\r\n`\r\n\r\nconst Header = styled.header `\r\n  background: url(${logo}) no-repeat center;\r\n  padding: 5rem 0;\r\n  background-size: 8rem;\r\n  width: 100%;\r\n`","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\login.tsx",["156","157","158","159"],"import React, {FormEvent} from \"react\";\r\nimport {useAuth} from \"context/auth-context\";\r\nimport {Form, Button, Input} from 'antd'\r\nimport {LongButton} from \"./index\";\r\nimport {useAsync} from \"../utils/use-async\";\r\nimport {throws} from \"assert\";\r\n\r\nexport const LoginScreen = ({onError}:{onError : (error :Error) => void}) => {\r\n    const {login, user} = useAuth();\r\n    const {run, isLoading} = useAsync(undefined, {throwOnError: true});\r\n    const handleSubmit = async (values: {username: string, password:string}) => {\r\n        try {\r\n            await run(login(values))\r\n        } catch (e) {\r\n            onError(e)\r\n        }\r\n    }\r\n    return (<Form onFinish={handleSubmit}>\r\n            <Form.Item name={'username'} rules={[{required:true, message:'请输入用户名'}]}>\r\n                <Input placeholder=\"username\" type=\"text\" id={\"username\"}/>\r\n            </Form.Item>\r\n            <Form.Item name= {'password'} rules={[{required:true, message:'请输入密码'}]}>\r\n                <Input placeholder=\"password\" type=\"password\" id={\"password\"}/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <LongButton loading={isLoading} htmlType={'submit'} type={\"primary\"}>登录</LongButton>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\register.tsx",["160","161","162","163"],"import React, {FormEvent} from \"react\";\r\nimport {useAuth} from \"context/auth-context\";\r\nimport {Form, Button, Input} from 'antd'\r\nimport {LongButton} from \"./index\";\r\nimport {useAsync} from \"../utils/use-async\";\r\n\r\nexport const RegisterScreen = ({onError}:{onError : (error :Error) => void}) => {\r\n    const {register, user} = useAuth();\r\n    const {run, isLoading} = useAsync(undefined, {throwOnError: true});\r\n    const handleSubmit = async ({cpassword, ...values}: {username: string, password:string, cpassword: string}) => {\r\n        if (cpassword !== values.password) {\r\n            onError(new Error('请确认两次输入的密码相同'))\r\n            return\r\n        }\r\n        try {\r\n            await run(register(values));\r\n        } catch (e) {\r\n            onError(e)\r\n        }\r\n    }\r\n    return (<Form onFinish={handleSubmit}>\r\n            <Form.Item name={'username'} rules={[{required:true, message:'请输入用户名'}]}>\r\n                <Input placeholder=\"username\" type=\"text\" id={\"username\"}/>\r\n            </Form.Item>\r\n            <Form.Item name= {'password'} rules={[{required:true, message:'请输入密码'}]}>\r\n                <Input placeholder=\"password\" type=\"password\" id={\"password\"}/>\r\n            </Form.Item>\r\n            <Form.Item name= {'cpassword'} rules={[{required:true, message:'请确认密码'}]}>\r\n                <Input placeholder=\"cpassword\" type=\"password\" id={\"cpassword\"}/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <LongButton htmlType={'submit'} type={\"primary\"}>注册</LongButton>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\index.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\http.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\lib.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\user.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\project.ts",["164"],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\use-async.ts",["165"],"import {useCallback, useReducer, useState} from \"react\";\r\nimport {useMountedRef} from \"./index\";\r\n\r\n\r\ninterface State<D> {\r\n    error: Error | null;\r\n    data: D | null;\r\n    stat: 'idle' | 'loading' | 'error' | 'success'\r\n}\r\n\r\nconst defaultInitialState: State<null> = {\r\n    stat:'idle',\r\n    data: null,\r\n    error: null\r\n}\r\n\r\nconst defaultConfig =  {\r\n    throwOnError:false\r\n}\r\n\r\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\r\n    const mountedRef = useMountedRef()\r\n    return useCallback((...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0), [dispatch, mountedRef])\r\n}\r\nexport const useAsync = <D>(initialState?: State<D>, initialConfig?: typeof  defaultConfig) => {\r\n    const config = {...defaultConfig, initialConfig}\r\n    const [state, dispatch] = useReducer((state:State<D>, action:Partial<State<D>>) => ({...state, ...action}),{\r\n        ...defaultInitialState,\r\n        ...initialState\r\n    })\r\n    const safeDispatch = useSafeDispatch(dispatch)\r\n    const [retry, setRetry] = useState(() => () => {\r\n\r\n    })\r\n\r\n    const setData = useCallback((data: D) => safeDispatch({\r\n         data,\r\n        stat: 'success',\r\n        error: null\r\n    }), [safeDispatch])\r\n\r\n    const setError = useCallback((error:Error) => safeDispatch({\r\n        error,\r\n        stat: 'error',\r\n        data: null\r\n    }), [safeDispatch])\r\n    //run 用来触发异步请求\r\n    const run = useCallback((\r\n        (promise: Promise<D>, runConfig?: {retry: () => Promise<D>}) => {\r\n            if (!promise || !promise.then) {\r\n                throw new Error('请传入Promise类型数据')\r\n            }\r\n            setRetry(() => () => {\r\n                if (runConfig?.retry) {\r\n                    run(runConfig?.retry(), runConfig)\r\n                }\r\n            })\r\n            safeDispatch({stat:'loading'})\r\n            return promise.then(data => {\r\n                setData(data)\r\n                return data\r\n            }).catch(error => {\r\n                // catch会消化异常，如果不抛出，外面收不到\r\n                setError(error)\r\n                if (config.throwOnError) Promise.reject(error);\r\n                return error;\r\n            })\r\n        }\r\n    ), [config.throwOnError, setData, setError])\r\n\r\n    return {\r\n        isIdle:state.stat === 'idle',\r\n        isLoading: state.stat === 'loading',\r\n        isError:state.stat === 'error',\r\n        isSuccess: state.stat === 'success',\r\n        run,\r\n        setData,\r\n        setError,\r\n        //retry调用后再跑一边run\r\n        retry,\r\n        ...state\r\n    }\r\n}","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project\\index.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\index.tsx",["166"],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\epic\\index.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\url.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\util.ts",["167","168","169","170","171"],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\pin.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\project-popover.tsx",["172","173"],"import React from \"react\";\r\nimport {Popover, List, Typography, Divider, Button} from \"antd\";\r\nimport {useProjects} from \"../utils/project\";\r\nimport styled from \"@emotion/styled\";\r\nimport {ButtonNoPadding} from \"./lib\";\r\nimport {useProjectModal} from \"../screens/project-list/util\";\r\n\r\nexport const ProjectPopover = () => {\r\n    const {open} = useProjectModal()\r\n    const {data:projects, isLoading} = useProjects()\r\n    const pinnedProjects = projects?.filter((project) => project.pin)\r\n\r\n    const content =(\r\n        <ContentContainer>\r\n        <Typography.Text type={\"secondary\"}>收藏项目</Typography.Text>\r\n        <List>\r\n            {\r\n                pinnedProjects?.map(project => <List.Item>\r\n                    <List.Item.Meta title = {project.name}/>\r\n                </List.Item>)\r\n            }\r\n        </List>\r\n        <Divider/>\r\n        <ButtonNoPadding onClick={open} type={\"link\"}>创建项目</ButtonNoPadding>\r\n    </ContentContainer>\r\n    )\r\n    return(\r\n    <Popover placement={\"bottom\"} content={content}>\r\n        <span>项目</span>\r\n    </Popover>\r\n    )\r\n}\r\n\r\nconst ContentContainer = styled.div`\r\n  min-width: 30rem;\r\n`;","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\project-modal.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\user-select.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\id-select.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\use-optimistic-opinion.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\util.ts",["174"],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\kanban.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\kanban-column.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\task.ts",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"183","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":30},{"ruleId":"179","severity":1,"message":"180","line":1,"column":43,"nodeType":"181","messageId":"182","endLine":1,"endColumn":51},{"ruleId":"179","severity":1,"message":"184","line":6,"column":32,"nodeType":"181","messageId":"182","endLine":6,"endColumn":47},{"ruleId":"179","severity":1,"message":"185","line":37,"column":50,"nodeType":"181","messageId":"182","endLine":37,"endColumn":57},{"ruleId":"179","severity":1,"message":"186","line":28,"column":12,"nodeType":"181","messageId":"182","endLine":28,"endColumn":28},{"ruleId":"179","severity":1,"message":"187","line":28,"column":30,"nodeType":"181","messageId":"182","endLine":28,"endColumn":49},{"ruleId":"179","severity":1,"message":"188","line":4,"column":32,"nodeType":"181","messageId":"182","endLine":4,"endColumn":42},{"ruleId":"179","severity":1,"message":"189","line":9,"column":9,"nodeType":"181","messageId":"182","endLine":9,"endColumn":15},{"ruleId":"179","severity":1,"message":"190","line":1,"column":16,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"191","line":3,"column":15,"nodeType":"181","messageId":"182","endLine":3,"endColumn":21},{"ruleId":"179","severity":1,"message":"192","line":6,"column":9,"nodeType":"181","messageId":"182","endLine":6,"endColumn":15},{"ruleId":"179","severity":1,"message":"193","line":9,"column":19,"nodeType":"181","messageId":"182","endLine":9,"endColumn":23},{"ruleId":"179","severity":1,"message":"190","line":1,"column":16,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"191","line":3,"column":15,"nodeType":"181","messageId":"182","endLine":3,"endColumn":21},{"ruleId":"179","severity":1,"message":"193","line":8,"column":22,"nodeType":"181","messageId":"182","endLine":8,"endColumn":26},{"ruleId":"179","severity":1,"message":"194","line":9,"column":17,"nodeType":"181","messageId":"182","endLine":9,"endColumn":26},{"ruleId":"179","severity":1,"message":"195","line":2,"column":42,"nodeType":"181","messageId":"182","endLine":2,"endColumn":56},{"ruleId":"196","severity":1,"message":"197","line":69,"column":8,"nodeType":"198","endLine":69,"endColumn":48,"suggestions":"199"},{"ruleId":"179","severity":1,"message":"200","line":22,"column":7,"nodeType":"181","messageId":"182","endLine":22,"endColumn":23},{"ruleId":"179","severity":1,"message":"201","line":4,"column":9,"nodeType":"181","messageId":"182","endLine":4,"endColumn":24},{"ruleId":"179","severity":1,"message":"202","line":44,"column":7,"nodeType":"181","messageId":"182","endLine":44,"endColumn":14},{"ruleId":"179","severity":1,"message":"203","line":45,"column":18,"nodeType":"181","messageId":"182","endLine":45,"endColumn":27},{"ruleId":"179","severity":1,"message":"204","line":46,"column":12,"nodeType":"181","messageId":"182","endLine":46,"endColumn":13},{"ruleId":"179","severity":1,"message":"205","line":46,"column":15,"nodeType":"181","messageId":"182","endLine":46,"endColumn":19},{"ruleId":"179","severity":1,"message":"191","line":2,"column":45,"nodeType":"181","messageId":"182","endLine":2,"endColumn":51},{"ruleId":"179","severity":1,"message":"194","line":10,"column":27,"nodeType":"181","messageId":"182","endLine":10,"endColumn":36},{"ruleId":"179","severity":1,"message":"206","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":13},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ProviderProps' is defined but never used.","'FullPageLoading' is defined but never used.","'isError' is assigned a value but never used.","'projectModalOpen' is assigned a value but never used.","'setProjectModalOpen' is assigned a value but never used.","'Typography' is defined but never used.","'Helmet' is defined but never used.","'FormEvent' is defined but never used.","'Button' is defined but never used.","'throws' is defined but never used.","'user' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'useQueryClient' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'safeDispatch'. Either include it or remove the dependency array.","ArrayExpression",["209"],"'ColumnsContainer' is assigned a value but never used.","'useSearchParams' is defined but never used.","'useTest' is assigned a value but never used.","'openModal' is assigned a value but never used.","'a' is assigned a value but never used.","'setA' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},"Update the dependencies array to be: [config.throwOnError, safeDispatch, setData, setError]",{"range":"212","text":"213"},[2156,2196],"[config.throwOnError, safeDispatch, setData, setError]"]