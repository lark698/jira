[{"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\index.tsx":"1","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\reportWebVitals.ts":"2","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\App.tsx":"3","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\list.tsx":"4","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\search-panel.tsx":"5","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\index.tsx":"6","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\context\\index.tsx":"7","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\context\\auth-context.tsx":"8","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\authenticated-app.tsx":"9","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\auth-provider.ts":"10","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\index.tsx":"11","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\login.tsx":"12","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\register.tsx":"13","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\index.ts":"14","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\http.ts":"15","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\lib.tsx":"16","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\user.ts":"17","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\project.ts":"18","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\use-async.ts":"19","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project\\index.tsx":"20","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\index.tsx":"21","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\epic\\index.tsx":"22","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\url.ts":"23","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\util.ts":"24","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\pin.tsx":"25","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\project-popover.tsx":"26","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\project-modal.tsx":"27","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\user-select.tsx":"28","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\id-select.tsx":"29","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\use-optimistic-opinion.ts":"30","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\util.ts":"31","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\kanban.ts":"32","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\kanban-column.tsx":"33","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\task.ts":"34","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\task-type.ts":"35","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\search-panel.tsx":"36","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\task-type-select.tsx":"37"},{"size":764,"mtime":1614519097744,"results":"38","hashOfConfig":"39"},{"size":425,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":412,"mtime":1614838521883,"results":"41","hashOfConfig":"39"},{"size":3568,"mtime":1616951835077,"results":"42","hashOfConfig":"39"},{"size":1135,"mtime":1616951835108,"results":"43","hashOfConfig":"39"},{"size":1535,"mtime":1617568053470,"results":"44","hashOfConfig":"39"},{"size":391,"mtime":1615367415155,"results":"45","hashOfConfig":"39"},{"size":1988,"mtime":1616951835088,"results":"46","hashOfConfig":"39"},{"size":3158,"mtime":1617566810410,"results":"47","hashOfConfig":"39"},{"size":1492,"mtime":1616951835098,"results":"48","hashOfConfig":"39"},{"size":2337,"mtime":1615822551215,"results":"49","hashOfConfig":"39"},{"size":1271,"mtime":1615367415158,"results":"50","hashOfConfig":"39"},{"size":1620,"mtime":1612928360717,"results":"51","hashOfConfig":"39"},{"size":2576,"mtime":1614844497983,"results":"52","hashOfConfig":"39"},{"size":1706,"mtime":1614844136181,"results":"53","hashOfConfig":"39"},{"size":1632,"mtime":1617567884910,"results":"54","hashOfConfig":"39"},{"size":483,"mtime":1616951835098,"results":"55","hashOfConfig":"39"},{"size":1484,"mtime":1616951507863,"results":"56","hashOfConfig":"39"},{"size":2588,"mtime":1615953838493,"results":"57","hashOfConfig":"39"},{"size":1694,"mtime":1617568218465,"results":"58","hashOfConfig":"39"},{"size":1043,"mtime":1617567661383,"results":"59","hashOfConfig":"39"},{"size":92,"mtime":1614091082753,"results":"60","hashOfConfig":"39"},{"size":1335,"mtime":1616575980738,"results":"61","hashOfConfig":"39"},{"size":1632,"mtime":1616606290071,"results":"62","hashOfConfig":"39"},{"size":431,"mtime":1614412002554,"results":"63","hashOfConfig":"39"},{"size":1154,"mtime":1615953838498,"results":"64","hashOfConfig":"39"},{"size":3646,"mtime":1616605650836,"results":"65","hashOfConfig":"39"},{"size":301,"mtime":1614245894148,"results":"66","hashOfConfig":"39"},{"size":1381,"mtime":1615855242766,"results":"67","hashOfConfig":"39"},{"size":1292,"mtime":1616096493408,"results":"68","hashOfConfig":"39"},{"size":1156,"mtime":1617455007845,"results":"69","hashOfConfig":"39"},{"size":297,"mtime":1617106672816,"results":"70","hashOfConfig":"39"},{"size":1645,"mtime":1617381599155,"results":"71","hashOfConfig":"39"},{"size":283,"mtime":1616953042888,"results":"72","hashOfConfig":"39"},{"size":280,"mtime":1617378594099,"results":"73","hashOfConfig":"39"},{"size":1295,"mtime":1617456806485,"results":"74","hashOfConfig":"39"},{"size":324,"mtime":1617456373321,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"k461r0",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\index.tsx",[],["162","163"],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\reportWebVitals.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\App.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\list.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\search-panel.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\index.tsx",["164","165"],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\context\\index.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\context\\auth-context.tsx",["166","167","168","169"],"import React, { ProviderProps, ReactNode, useState } from \"react\";\r\nimport * as auth from \"../auth-provider\";\r\nimport {useMount} from \"../utils\";\r\nimport {http} from \"utils/http\";\r\nimport {useAsync} from \"../utils/use-async\";\r\nimport {FullPageErrorFallback, FullPageLoading} from \"../components/lib\";\r\nimport {useQueryClient} from \"react-query\";\r\nimport {User} from \"../types/user\";\r\n\r\ninterface AuthForm {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nconst AuthContext = React.createContext<\r\n    | {\r\n    user: User | null;\r\n    register: (form: AuthForm) => Promise<void>;\r\n    login: (form: AuthForm) => Promise<void>;\r\n    logout: () => Promise<void>;\r\n}\r\n    | undefined\r\n    >(undefined);\r\nAuthContext.displayName = \"AuthContext\";\r\n\r\nconst bootstrapUser = async () => {\r\n    let user = null\r\n    const token = auth.getToken()\r\n    if (token) {\r\n        const data = await http('me', {token})\r\n        user = data.user\r\n    }\r\n    return user\r\n}\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n    const {data: user, error, isLoading, isIdle, isError, run, setData: setUser} = useAsync<User | null>();\r\n    const queryClient = useQueryClient()\r\n    // point free\r\n    const login = (form: AuthForm) => auth.login(form).then(setUser);\r\n    const register = (form: AuthForm) => auth.register(form).then(setUser);\r\n    const logout = () => auth.logout().then(() => {\r\n        setUser(null)\r\n        queryClient.clear()\r\n    });\r\n    useMount(() => {\r\n        run(bootstrapUser())\r\n    })\r\n    if (isIdle || isLoading) {\r\n        return <p>loading...</p>\r\n    }\r\n    if (error) {\r\n        return <FullPageErrorFallback error={error}/>\r\n    }\r\n\r\n    return <AuthContext.Provider children={children} value={{ user, login, register, logout }}/>\r\n}\r\n\r\nexport const useAuth = () => {\r\n    const context = React.useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error(\"useAuth必须在AuthProvider中使用\");\r\n    }\r\n    return context;\r\n};","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\authenticated-app.tsx",["170","171"],"import React, {useState} from \"react\";\r\nimport { ProjectListScreen } from \"screens/project-list\";\r\nimport {ProjectScreen} from \"./screens/project\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport styled from \"@emotion/styled\";\r\nimport {ButtonNoPadding, Row} from \"components/lib\";\r\nimport { ReactComponent as SoftwareLogo } from \"assets/software-logo.svg\";\r\nimport { Button, Dropdown, Menu } from \"antd\";\r\nimport { Route, Routes, Navigate } from 'react-router'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { resetRoute } from \"utils\";\r\nimport {ProjectModal} from \"./screens/project-list/project-modal\";\r\nimport {ProjectPopover} from \"./components/project-popover\";\r\n\r\n/**\r\n * grid 和 flex 各自的应用场景\r\n * 1. 要考虑，是一维布局 还是 二维布局\r\n * 一般来说，一维布局用flex，二维布局用grid\r\n * 2. 是从内容出发还是从布局出发？\r\n * 从内容出发：你先有一组内容(数量一般不固定),然后希望他们均匀的分布在容器中，由内容自己的大小决定占据的空间\r\n * 从布局出发：先规划网格(数量一般比较固定)，然后再把元素往里填充\r\n * 从内容出发，用flex\r\n * 从布局出发，用grid\r\n *\r\n */\r\n\r\nexport const AuthenticatedApp = () => {\r\n    const [projectModalOpen, setProjectModalOpen] = useState(false)\r\n\r\n    return (\r\n        <Container>\r\n            <Router>\r\n            <PageHeader />\r\n            <Main>\r\n                    <Routes>\r\n                        <Route path={'/projects'} element={<ProjectListScreen/>}/>\r\n                        <Route path={'/projects/:projectId/*'} element={<ProjectScreen/>}/>\r\n                        <Navigate to={'/projects'}/>\r\n                    </Routes>\r\n            </Main>\r\n            <ProjectModal/>\r\n        </Router>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst PageHeader = () => {\r\n    return <Header between={true}>\r\n        <HeaderLeft gap={true}>\r\n            <ButtonNoPadding  type={\"link\"} onClick={resetRoute}>\r\n                <SoftwareLogo width={\"18rem\"} color={\"rgb(38, 132, 255)\"} />\r\n            </ButtonNoPadding>\r\n            <ProjectPopover />\r\n            <span>用户</span>\r\n        </HeaderLeft>\r\n        <HeaderRight>\r\n            <User/>\r\n        </HeaderRight>\r\n    </Header>\r\n}\r\n\r\nconst User = () => {\r\n    const { logout, user } = useAuth();\r\n    return <Dropdown overlay={\r\n        <Menu>\r\n            <Menu.Item key={'logout'}>\r\n                <Button onClick={logout} type={\"link\"}>\r\n                    登出\r\n                </Button>\r\n            </Menu.Item>\r\n        </Menu>\r\n    }>\r\n        <Button type={\"link\"} onClick={(e) => e.preventDefault()}>\r\n            Hi, {user?.name}\r\n        </Button>\r\n    </Dropdown>\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 6rem 1fr;\r\n  height: 100vh;\r\n`;\r\n\r\n// grid-area 用来给grid子元素起名字\r\nconst Header = styled(Row)`\r\n  padding: 3.2rem;\r\n  box-shadow: 0 0 5px 0 rgba(0,0,0,0);\r\n  z-index: 1;\r\n`;\r\nconst HeaderLeft = styled(Row)``;\r\nconst HeaderRight = styled.div``;\r\nconst Main = styled.main`\r\n  //display: flex;\r\n  overflow: hidden;\r\n`;","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\auth-provider.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\index.tsx",["172","173"],"import React, {useState} from \"react\"\r\nimport {RegisterScreen} from \"unauthenticated-app/register\";\r\nimport {LoginScreen} from \"unauthenticated-app/login\";\r\nimport {Card, Divider, Button, Typography} from 'antd'\r\nimport styled from '@emotion/styled'\r\nimport logo from 'assets/logo.svg'\r\nimport left from 'assets/left.svg'\r\nimport right from 'assets/right.svg'\r\nimport {Helmet} from 'react-helmet'\r\nimport {useDocumentTitle} from \"../utils\";\r\nimport {ErrorBox} from \"../components/lib\";\r\n\r\nexport const UnauthenticatedApp = () => {\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [error, setError] = useState<Error | null>(null)\r\n    useDocumentTitle('请登录注册以继续')\r\n    return <div style={{display:'flex', justifyContent:'center'}}>\r\n        <Container>\r\n            <Header/>\r\n            <Background/>\r\n        <ShadowCard>\r\n            <Title>\r\n                {isRegister ? '请注册':'请登录'}\r\n                <ErrorBox error={error}/>\r\n            </Title>\r\n        {\r\n            isRegister ? <RegisterScreen onError={setError}/> : <LoginScreen onError={setError}/>\r\n        }\r\n        <Divider/>\r\n            <Button type = {\"link\"} onClick={() => setIsRegister(!isRegister)}>切换到{isRegister ? '登录' : '没有帐户，这里注册'}</Button>\r\n        </ShadowCard>\r\n        </Container>\r\n    </div>\r\n}\r\n\r\nexport const LongButton = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 2.4rem;\r\n  color: rgb(94, 108, 132);\r\n`;\r\n\r\nconst Background = styled.div `\r\n    position:absolute;;\r\n  width:100%;\r\n  height:100%;\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n  background-position: left bottom, right, bottom;\r\n  background-size: calc(((100vw - 40rem) / 2) - 3.2rem), calc(((100vw - 40rem) / 2) - 3.2rem), cover;\r\n  background-image: url(${left}), url(${right});\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex; \r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  `\r\n\r\nconst ShadowCard = styled(Card)`\r\n  width:40rem;\r\n  min-height:56rem;\r\n  padding:3.2rem 4rem;\r\n  box-sizing:border-box;\r\n  box-shadow: raba(0,0,0,0.1) 0 0 10px;\r\n  text-align: center;\r\n`\r\n\r\nconst Header = styled.header `\r\n  background: url(${logo}) no-repeat center;\r\n  padding: 5rem 0;\r\n  background-size: 8rem;\r\n  width: 100%;\r\n`","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\login.tsx",["174","175","176","177"],"import React, {FormEvent} from \"react\";\r\nimport {useAuth} from \"context/auth-context\";\r\nimport {Form, Button, Input} from 'antd'\r\nimport {LongButton} from \"./index\";\r\nimport {useAsync} from \"../utils/use-async\";\r\nimport {throws} from \"assert\";\r\n\r\nexport const LoginScreen = ({onError}:{onError : (error :Error) => void}) => {\r\n    const {login, user} = useAuth();\r\n    const {run, isLoading} = useAsync(undefined, {throwOnError: true});\r\n    const handleSubmit = async (values: {username: string, password:string}) => {\r\n        try {\r\n            await run(login(values))\r\n        } catch (e) {\r\n            onError(e)\r\n        }\r\n    }\r\n    return (<Form onFinish={handleSubmit}>\r\n            <Form.Item name={'username'} rules={[{required:true, message:'请输入用户名'}]}>\r\n                <Input placeholder=\"username\" type=\"text\" id={\"username\"}/>\r\n            </Form.Item>\r\n            <Form.Item name= {'password'} rules={[{required:true, message:'请输入密码'}]}>\r\n                <Input placeholder=\"password\" type=\"password\" id={\"password\"}/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <LongButton loading={isLoading} htmlType={'submit'} type={\"primary\"}>登录</LongButton>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\register.tsx",["178","179","180","181"],"import React, {FormEvent} from \"react\";\r\nimport {useAuth} from \"context/auth-context\";\r\nimport {Form, Button, Input} from 'antd'\r\nimport {LongButton} from \"./index\";\r\nimport {useAsync} from \"../utils/use-async\";\r\n\r\nexport const RegisterScreen = ({onError}:{onError : (error :Error) => void}) => {\r\n    const {register, user} = useAuth();\r\n    const {run, isLoading} = useAsync(undefined, {throwOnError: true});\r\n    const handleSubmit = async ({cpassword, ...values}: {username: string, password:string, cpassword: string}) => {\r\n        if (cpassword !== values.password) {\r\n            onError(new Error('请确认两次输入的密码相同'))\r\n            return\r\n        }\r\n        try {\r\n            await run(register(values));\r\n        } catch (e) {\r\n            onError(e)\r\n        }\r\n    }\r\n    return (<Form onFinish={handleSubmit}>\r\n            <Form.Item name={'username'} rules={[{required:true, message:'请输入用户名'}]}>\r\n                <Input placeholder=\"username\" type=\"text\" id={\"username\"}/>\r\n            </Form.Item>\r\n            <Form.Item name= {'password'} rules={[{required:true, message:'请输入密码'}]}>\r\n                <Input placeholder=\"password\" type=\"password\" id={\"password\"}/>\r\n            </Form.Item>\r\n            <Form.Item name= {'cpassword'} rules={[{required:true, message:'请确认密码'}]}>\r\n                <Input placeholder=\"cpassword\" type=\"password\" id={\"cpassword\"}/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <LongButton htmlType={'submit'} type={\"primary\"}>注册</LongButton>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\index.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\http.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\lib.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\user.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\project.ts",["182"],"import { useHttp } from \"utils/http\";\r\nimport {QueryKey, useMutation, useQuery, useQueryClient} from \"react-query\";\r\nimport {useAddConfig, useDeleteConfig, useEditConfig} from \"./use-optimistic-opinion\";\r\nimport {Project} from \"../types/project\";\r\n\r\nexport const useProjects = (param?: Partial<Project>) => {\r\n    const client = useHttp();\r\n    return useQuery<Project[]>(['projects', param], () => client('projects', {data: param}))\r\n};\r\n\r\nexport const useEditProject = (queryKey: QueryKey) => {\r\n    const client = useHttp()\r\n    return useMutation((params: Partial<Project>) => client(`projects/${params.id}`, {\r\n        method: 'PATCH',  data:params,\r\n    }),\r\n        useEditConfig(queryKey)\r\n    )\r\n}\r\n\r\nexport const useAddProject = (queryKey: QueryKey) => {\r\n    const client = useHttp()\r\n    return useMutation((params: Partial<Project>) => client(`projects`, {\r\n            data:params,\r\n            method: 'POST',\r\n        }),\r\n        useAddConfig(queryKey)\r\n    )\r\n}\r\n\r\nexport const useDeleteProject = (queryKey: QueryKey) => {\r\n    const client = useHttp()\r\n    return useMutation(({id} : {id: number}) => client(`projects${id}`, {\r\n            method: 'DELETE',\r\n        }),\r\n        useDeleteConfig(queryKey)\r\n    )\r\n}\r\n\r\nexport const useProject = (id?: number) => {\r\n    const client = useHttp();\r\n    return useQuery<Project>(\r\n        [\"project\", { id }],\r\n        () => client(`projects/${id}`),\r\n        {\r\n            enabled: Boolean(id),\r\n        }\r\n    );\r\n};","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\use-async.ts",["183"],"import {useCallback, useReducer, useState} from \"react\";\r\nimport {useMountedRef} from \"./index\";\r\n\r\n\r\ninterface State<D> {\r\n    error: Error | null;\r\n    data: D | null;\r\n    stat: 'idle' | 'loading' | 'error' | 'success'\r\n}\r\n\r\nconst defaultInitialState: State<null> = {\r\n    stat:'idle',\r\n    data: null,\r\n    error: null\r\n}\r\n\r\nconst defaultConfig =  {\r\n    throwOnError:false\r\n}\r\n\r\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\r\n    const mountedRef = useMountedRef()\r\n    return useCallback((...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0), [dispatch, mountedRef])\r\n}\r\nexport const useAsync = <D>(initialState?: State<D>, initialConfig?: typeof  defaultConfig) => {\r\n    const config = {...defaultConfig, initialConfig}\r\n    const [state, dispatch] = useReducer((state:State<D>, action:Partial<State<D>>) => ({...state, ...action}),{\r\n        ...defaultInitialState,\r\n        ...initialState\r\n    })\r\n    const safeDispatch = useSafeDispatch(dispatch)\r\n    const [retry, setRetry] = useState(() => () => {\r\n\r\n    })\r\n\r\n    const setData = useCallback((data: D) => safeDispatch({\r\n         data,\r\n        stat: 'success',\r\n        error: null\r\n    }), [safeDispatch])\r\n\r\n    const setError = useCallback((error:Error) => safeDispatch({\r\n        error,\r\n        stat: 'error',\r\n        data: null\r\n    }), [safeDispatch])\r\n    //run 用来触发异步请求\r\n    const run = useCallback((\r\n        (promise: Promise<D>, runConfig?: {retry: () => Promise<D>}) => {\r\n            if (!promise || !promise.then) {\r\n                throw new Error('请传入Promise类型数据')\r\n            }\r\n            setRetry(() => () => {\r\n                if (runConfig?.retry) {\r\n                    run(runConfig?.retry(), runConfig)\r\n                }\r\n            })\r\n            safeDispatch({stat:'loading'})\r\n            return promise.then(data => {\r\n                setData(data)\r\n                return data\r\n            }).catch(error => {\r\n                // catch会消化异常，如果不抛出，外面收不到\r\n                setError(error)\r\n                if (config.throwOnError) Promise.reject(error);\r\n                return error;\r\n            })\r\n        }\r\n    ), [config.throwOnError, setData, setError])\r\n\r\n    return {\r\n        isIdle:state.stat === 'idle',\r\n        isLoading: state.stat === 'loading',\r\n        isError:state.stat === 'error',\r\n        isSuccess: state.stat === 'success',\r\n        run,\r\n        setData,\r\n        setError,\r\n        //retry调用后再跑一边run\r\n        retry,\r\n        ...state\r\n    }\r\n}","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project\\index.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\index.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\epic\\index.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\url.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\util.ts",["184","185","186","187","188"],"import {useSetUrlSearchParam, useUrlQueryParam} from \"utils/url\";\r\nimport {useMemo, useState} from \"react\";\r\nimport {useProject} from \"../../utils/project\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\n\r\n// 项目列表搜索的参数\r\nexport const useProjectsSearchParams = () => {\r\n    const [param, setParam] = useUrlQueryParam([\"name\", \"personId\"]);\r\n    return [\r\n        useMemo(\r\n            () => ({ ...param, personId: Number(param.personId) || undefined }),\r\n            [param]\r\n        ),\r\n        setParam,\r\n    ] as const;\r\n};\r\nexport const useProjectsQueryKey = () => {\r\n    const [params] = useProjectsSearchParams()\r\n    return ['projects', params]}\r\n//全局状态管理器\r\nexport const useProjectModal = () => {\r\n    const [{projectCreate}, setProjectCreate] = useUrlQueryParam([\r\n        'projectCreate'\r\n    ])\r\n    const [{editingProjectId}, setEditingProjectId] = useUrlQueryParam([\r\n        'editingProjectId'\r\n    ])\r\n    const  setUrlParams = useSetUrlSearchParam()\r\n    const {data: editingProject, isLoading} = useProject(Number(editingProjectId))\r\n    const open = () => setProjectCreate({projectCreate: true})\r\n    const close = () => setUrlParams({ projectCreate: \"\", editingProjectId: \"\" })\r\n    const startEdit = (id: number) => setEditingProjectId({editingProjectId: id})\r\n\r\n    return {\r\n        projectModalOpen: projectCreate === 'true' || Boolean(editingProjectId),\r\n        open,\r\n        close,\r\n        startEdit,\r\n        editingProject,\r\n        isLoading,\r\n    }\r\n}\r\n\r\nconst useTest = () => {\r\n    const {open: openModal} = useProjectModal()\r\n    const [a, setA] = useState()\r\n}\r\n","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\pin.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\project-popover.tsx",["189","190"],"import React from \"react\";\r\nimport {Popover, List, Typography, Divider, Button} from \"antd\";\r\nimport {useProjects} from \"../utils/project\";\r\nimport styled from \"@emotion/styled\";\r\nimport {ButtonNoPadding} from \"./lib\";\r\nimport {useProjectModal} from \"../screens/project-list/util\";\r\n\r\nexport const ProjectPopover = () => {\r\n    const {open} = useProjectModal()\r\n    const {data:projects, isLoading} = useProjects()\r\n    const pinnedProjects = projects?.filter((project) => project.pin)\r\n\r\n    const content =(\r\n        <ContentContainer>\r\n        <Typography.Text type={\"secondary\"}>收藏项目</Typography.Text>\r\n        <List>\r\n            {\r\n                pinnedProjects?.map(project => <List.Item>\r\n                    <List.Item.Meta title = {project.name}/>\r\n                </List.Item>)\r\n            }\r\n        </List>\r\n        <Divider/>\r\n        <ButtonNoPadding onClick={open} type={\"link\"}>创建项目</ButtonNoPadding>\r\n    </ContentContainer>\r\n    )\r\n    return(\r\n    <Popover placement={\"bottom\"} content={content}>\r\n        <span>项目</span>\r\n    </Popover>\r\n    )\r\n}\r\n\r\nconst ContentContainer = styled.div`\r\n  min-width: 30rem;\r\n`;","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\project-modal.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\user-select.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\id-select.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\use-optimistic-opinion.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\util.ts",["191","192"],"import {useLocation} from \"react-router\";\r\nimport React, {useMemo} from \"react\"\r\nimport {useProject} from \"../../utils/project\";\r\nimport {useUrlQueryParam} from \"../../utils/url\";\r\n\r\nexport const useProjectIdInUrl = () => {\r\n    const {pathname} = useLocation()\r\n    const id = pathname.match(/projects\\/(d+)/)?.[1]\r\n    return Number(id)\r\n}\r\n\r\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl())\r\n\r\nexport const useKanbanSearchParams = () => ({\r\n    projectId: useProjectIdInUrl()\r\n})\r\n\r\nexport const useKanbansQueryKey = () => ['kanbans', useKanbanSearchParams()]\r\n\r\nexport const useTasksSearchParams = () => {\r\n    const [param, setParam] = useUrlQueryParam([\r\n        'name',\r\n        'typeId',\r\n        'processorId',\r\n        'tagId'\r\n    ])\r\n    const projectId = useProjectIdInUrl()\r\n    return useMemo(() => ({\r\n        projectId,\r\n        typeId: Number(param.typeId) || undefined,\r\n        processorId: Number(param.processorId) || undefined,\r\n        tagId: Number(param.tagId) || undefined,\r\n        name: param.name\r\n    }), [projectId, param])\r\n}\r\n\r\nexport const useTasksQueryKey = () =>['tasks', useTasksSearchParams()]\r\n\r\n","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\kanban.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\kanban-column.tsx",["193"],"import React from \"react\";\r\nimport { Kanban } from \"types/kanban\";\r\nimport {useTasks} from \"../../utils/task\";\r\nimport {useTasksSearchParams} from \"./util\";\r\nimport {useTaskTypes} from \"../../utils/task-type\";\r\nimport taskIcon from \"../../assets/task.svg\"\r\nimport bugIcon from \"../../assets/bug.svg\"\r\nimport styled from \"@emotion/styled\";\r\nimport {Card} from \"antd\";\r\n\r\nconst TaskTypeIcon = ({id}: {id:number}) => {\r\n    const {data: taskTypes} = useTaskTypes()\r\n    const name = taskTypes?.find((taskType) => taskType.id === id)?.name\r\n    if(!name) {\r\n        return null\r\n    }\r\n    return <img src={name === 'task' ? taskIcon: bugIcon}/>\r\n}\r\n\r\nexport const KanbanColumn = ({ kanban }: { kanban: Kanban }) => {\r\n    const { data: allTasks } = useTasks(useTasksSearchParams());\r\n    const tasks = allTasks?.filter(task => task.kanbanId === kanban.id);\r\n    return (\r\n        <Container>\r\n            <h3>{kanban.name}</h3>\r\n            <TaskContainer>\r\n            {tasks?.map( task => (\r\n                <Card style={{marginBottom:'0.5rem'}} key={task.id}>\r\n                <div>\r\n                    {task.name}\r\n                </div>\r\n                <TaskTypeIcon id={task.typeId}/>\r\n                </Card>\r\n            ))}\r\n            </TaskContainer>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n  min-width: 27rem;\r\n  border-radius: 6px;\r\n  background-color: rgb(244,245,247);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.7rem 0.7rem 0.7rem;\r\n  margin-right: 1.5rem;\r\n  `\r\n\r\nconst TaskContainer = styled.div `\r\n  overflow: scroll;\r\n  flex: 1;\r\n  ::-webkit-scrollbar{\r\n    display: none;\r\n  }\r\n  `","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\task.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\task-type.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\search-panel.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\task-type-select.tsx",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"202","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":14},{"ruleId":"198","severity":1,"message":"203","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":30},{"ruleId":"198","severity":1,"message":"199","line":1,"column":43,"nodeType":"200","messageId":"201","endLine":1,"endColumn":51},{"ruleId":"198","severity":1,"message":"204","line":6,"column":32,"nodeType":"200","messageId":"201","endLine":6,"endColumn":47},{"ruleId":"198","severity":1,"message":"205","line":37,"column":50,"nodeType":"200","messageId":"201","endLine":37,"endColumn":57},{"ruleId":"198","severity":1,"message":"206","line":28,"column":12,"nodeType":"200","messageId":"201","endLine":28,"endColumn":28},{"ruleId":"198","severity":1,"message":"207","line":28,"column":30,"nodeType":"200","messageId":"201","endLine":28,"endColumn":49},{"ruleId":"198","severity":1,"message":"208","line":4,"column":32,"nodeType":"200","messageId":"201","endLine":4,"endColumn":42},{"ruleId":"198","severity":1,"message":"209","line":9,"column":9,"nodeType":"200","messageId":"201","endLine":9,"endColumn":15},{"ruleId":"198","severity":1,"message":"210","line":1,"column":16,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"211","line":3,"column":15,"nodeType":"200","messageId":"201","endLine":3,"endColumn":21},{"ruleId":"198","severity":1,"message":"212","line":6,"column":9,"nodeType":"200","messageId":"201","endLine":6,"endColumn":15},{"ruleId":"198","severity":1,"message":"213","line":9,"column":19,"nodeType":"200","messageId":"201","endLine":9,"endColumn":23},{"ruleId":"198","severity":1,"message":"210","line":1,"column":16,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"211","line":3,"column":15,"nodeType":"200","messageId":"201","endLine":3,"endColumn":21},{"ruleId":"198","severity":1,"message":"213","line":8,"column":22,"nodeType":"200","messageId":"201","endLine":8,"endColumn":26},{"ruleId":"198","severity":1,"message":"214","line":9,"column":17,"nodeType":"200","messageId":"201","endLine":9,"endColumn":26},{"ruleId":"198","severity":1,"message":"215","line":2,"column":42,"nodeType":"200","messageId":"201","endLine":2,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":69,"column":8,"nodeType":"218","endLine":69,"endColumn":48,"suggestions":"219"},{"ruleId":"198","severity":1,"message":"220","line":4,"column":9,"nodeType":"200","messageId":"201","endLine":4,"endColumn":24},{"ruleId":"198","severity":1,"message":"221","line":44,"column":7,"nodeType":"200","messageId":"201","endLine":44,"endColumn":14},{"ruleId":"198","severity":1,"message":"222","line":45,"column":18,"nodeType":"200","messageId":"201","endLine":45,"endColumn":27},{"ruleId":"198","severity":1,"message":"223","line":46,"column":12,"nodeType":"200","messageId":"201","endLine":46,"endColumn":13},{"ruleId":"198","severity":1,"message":"224","line":46,"column":15,"nodeType":"200","messageId":"201","endLine":46,"endColumn":19},{"ruleId":"198","severity":1,"message":"211","line":2,"column":45,"nodeType":"200","messageId":"201","endLine":2,"endColumn":51},{"ruleId":"198","severity":1,"message":"214","line":10,"column":27,"nodeType":"200","messageId":"201","endLine":10,"endColumn":36},{"ruleId":"198","severity":1,"message":"225","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":13},{"ruleId":"198","severity":1,"message":"226","line":21,"column":19,"nodeType":"200","messageId":"201","endLine":21,"endColumn":27},{"ruleId":"227","severity":1,"message":"228","line":17,"column":12,"nodeType":"229","endLine":17,"endColumn":60},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","'ProviderProps' is defined but never used.","'FullPageLoading' is defined but never used.","'isError' is assigned a value but never used.","'projectModalOpen' is assigned a value but never used.","'setProjectModalOpen' is assigned a value but never used.","'Typography' is defined but never used.","'Helmet' is defined but never used.","'FormEvent' is defined but never used.","'Button' is defined but never used.","'throws' is defined but never used.","'user' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'useQueryClient' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'safeDispatch'. Either include it or remove the dependency array.","ArrayExpression",["232"],"'useSearchParams' is defined but never used.","'useTest' is assigned a value but never used.","'openModal' is assigned a value but never used.","'a' is assigned a value but never used.","'setA' is assigned a value but never used.","'React' is defined but never used.","'setParam' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},"Update the dependencies array to be: [config.throwOnError, safeDispatch, setData, setError]",{"range":"235","text":"236"},[2156,2196],"[config.throwOnError, safeDispatch, setData, setError]"]