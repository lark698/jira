[{"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\index.tsx":"1","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\reportWebVitals.ts":"2","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\App.tsx":"3","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\list.tsx":"4","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\search-panel.tsx":"5","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\index.tsx":"6","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\context\\index.tsx":"7","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\context\\auth-context.tsx":"8","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\authenticated-app.tsx":"9","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\auth-provider.ts":"10","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\index.tsx":"11","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\login.tsx":"12","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\register.tsx":"13","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\index.ts":"14","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\http.ts":"15","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\lib.tsx":"16","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\user.ts":"17","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\project.ts":"18","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\use-async.ts":"19","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project\\index.tsx":"20","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\index.tsx":"21","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\epic\\index.tsx":"22","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\url.ts":"23","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\util.ts":"24","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\pin.tsx":"25","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\project-popover.tsx":"26","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\project-modal.tsx":"27","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\user-select.tsx":"28","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\id-select.tsx":"29","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\use-optimistic-opinion.ts":"30","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\util.ts":"31","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\kanban.ts":"32","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\kanban-column.tsx":"33","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\task.ts":"34","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\task-type.ts":"35","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\search-panel.tsx":"36","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\task-type-select.tsx":"37","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\create-kanban.tsx":"38","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\task-modal.tsx":"39","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\create-task.tsx":"40","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\mark.tsx":"41","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\drag-and-drop.tsx":"42","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\reorder.ts":"43","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\epic.ts":"44","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\epic\\util.ts":"45","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\epic\\create-epic.tsx":"46","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\user-popover.tsx":"47"},{"size":764,"mtime":1614519097744,"results":"48","hashOfConfig":"49"},{"size":425,"mtime":499162500000,"results":"50","hashOfConfig":"49"},{"size":412,"mtime":1614838521883,"results":"51","hashOfConfig":"49"},{"size":3568,"mtime":1616951835077,"results":"52","hashOfConfig":"49"},{"size":1135,"mtime":1616951835108,"results":"53","hashOfConfig":"49"},{"size":1535,"mtime":1617568053470,"results":"54","hashOfConfig":"49"},{"size":391,"mtime":1615367415155,"results":"55","hashOfConfig":"49"},{"size":1988,"mtime":1616951835088,"results":"56","hashOfConfig":"49"},{"size":3209,"mtime":1618399378097,"results":"57","hashOfConfig":"49"},{"size":1492,"mtime":1616951835098,"results":"58","hashOfConfig":"49"},{"size":2337,"mtime":1615822551215,"results":"59","hashOfConfig":"49"},{"size":1271,"mtime":1615367415158,"results":"60","hashOfConfig":"49"},{"size":1620,"mtime":1612928360717,"results":"61","hashOfConfig":"49"},{"size":2576,"mtime":1614844497983,"results":"62","hashOfConfig":"49"},{"size":1706,"mtime":1614844136181,"results":"63","hashOfConfig":"49"},{"size":1632,"mtime":1617567884910,"results":"64","hashOfConfig":"49"},{"size":310,"mtime":1618399104546,"results":"65","hashOfConfig":"49"},{"size":1484,"mtime":1616951507863,"results":"66","hashOfConfig":"49"},{"size":2588,"mtime":1615953838493,"results":"67","hashOfConfig":"49"},{"size":1715,"mtime":1617638457477,"results":"68","hashOfConfig":"49"},{"size":4793,"mtime":1618260159926,"results":"69","hashOfConfig":"49"},{"size":3416,"mtime":1618309472720,"results":"70","hashOfConfig":"49"},{"size":1335,"mtime":1616575980738,"results":"71","hashOfConfig":"49"},{"size":1632,"mtime":1616606290071,"results":"72","hashOfConfig":"49"},{"size":431,"mtime":1614412002554,"results":"73","hashOfConfig":"49"},{"size":1251,"mtime":1618399347350,"results":"74","hashOfConfig":"49"},{"size":3646,"mtime":1616605650836,"results":"75","hashOfConfig":"49"},{"size":301,"mtime":1614245894148,"results":"76","hashOfConfig":"49"},{"size":1381,"mtime":1615855242766,"results":"77","hashOfConfig":"49"},{"size":1875,"mtime":1618300861108,"results":"78","hashOfConfig":"49"},{"size":1886,"mtime":1617707412481,"results":"79","hashOfConfig":"49"},{"size":1582,"mtime":1618300923313,"results":"80","hashOfConfig":"49"},{"size":4069,"mtime":1618300518018,"results":"81","hashOfConfig":"49"},{"size":1958,"mtime":1618300910598,"results":"82","hashOfConfig":"49"},{"size":280,"mtime":1617378594099,"results":"83","hashOfConfig":"49"},{"size":1295,"mtime":1617456806485,"results":"84","hashOfConfig":"49"},{"size":324,"mtime":1617456373321,"results":"85","hashOfConfig":"49"},{"size":742,"mtime":1617695382623,"results":"86","hashOfConfig":"49"},{"size":2675,"mtime":1617782357381,"results":"87","hashOfConfig":"49"},{"size":1234,"mtime":1617639452186,"results":"88","hashOfConfig":"49"},{"size":541,"mtime":1617784152232,"results":"89","hashOfConfig":"49"},{"size":1820,"mtime":1618297884701,"results":"90","hashOfConfig":"49"},{"size":1748,"mtime":1618300817032,"results":"91","hashOfConfig":"49"},{"size":1004,"mtime":1618309662063,"results":"92","hashOfConfig":"49"},{"size":213,"mtime":1618309420013,"results":"93","hashOfConfig":"49"},{"size":2754,"mtime":1618309560837,"results":"94","hashOfConfig":"49"},{"size":981,"mtime":1618399063463,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"k461r0",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\index.tsx",[],["204","205"],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\reportWebVitals.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\App.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\list.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\search-panel.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\index.tsx",["206","207"],"import React, { useState } from \"react\";\r\nimport { SearchPanel } from \"screens/project-list/search-panel\";\r\nimport { List } from \"screens/project-list/list\";\r\nimport {useDebounce, useDocumentTitle} from \"../../utils\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useProjects } from \"utils/project\";\r\nimport { useUsers } from \"utils/user\";\r\nimport {useUrlQueryParam} from \"../../utils/url\";\r\nimport {useProjectModal, useProjectsSearchParams} from \"./util\";\r\nimport {ButtonNoPadding, ErrorBox, Row, ScreenContainer} from \"../../components/lib\";\r\n\r\n// 使用 JS ，大部分的错误都是在 runtime(运行时) 的时候发现的\r\n// 我们希望，在静态代码中，就能找到其中的一些错误 -> 强类型\r\nexport const ProjectListScreen = () => {\r\n    useDocumentTitle(\"项目列表\", false);\r\n    const [param, setParam] = useProjectsSearchParams()\r\n    const {open} = useProjectModal()\r\n    const { isLoading, error, data: list } = useProjects(useDebounce(param, 200));\r\n    const { data: users } = useUsers();\r\n\r\n    useUrlQueryParam([''])\r\n    return (\r\n        <ScreenContainer>\r\n            <Row between={true}>\r\n                <h1>项目列表</h1>\r\n                <ButtonNoPadding onClick={open} type={\"link\"}>创建项目</ButtonNoPadding>\r\n            </Row>\r\n            <SearchPanel users={users || []} param={param} setParam={setParam} />\r\n            <ErrorBox error={error}/>\r\n            <List  loading={isLoading} users={users || []} dataSource={list || []} />\r\n        </ScreenContainer>\r\n    );\r\n};\r\n","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\context\\index.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\context\\auth-context.tsx",["208","209","210","211"],"import React, { ProviderProps, ReactNode, useState } from \"react\";\r\nimport * as auth from \"../auth-provider\";\r\nimport {useMount} from \"../utils\";\r\nimport {http} from \"utils/http\";\r\nimport {useAsync} from \"../utils/use-async\";\r\nimport {FullPageErrorFallback, FullPageLoading} from \"../components/lib\";\r\nimport {useQueryClient} from \"react-query\";\r\nimport {User} from \"../types/user\";\r\n\r\ninterface AuthForm {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nconst AuthContext = React.createContext<\r\n    | {\r\n    user: User | null;\r\n    register: (form: AuthForm) => Promise<void>;\r\n    login: (form: AuthForm) => Promise<void>;\r\n    logout: () => Promise<void>;\r\n}\r\n    | undefined\r\n    >(undefined);\r\nAuthContext.displayName = \"AuthContext\";\r\n\r\nconst bootstrapUser = async () => {\r\n    let user = null\r\n    const token = auth.getToken()\r\n    if (token) {\r\n        const data = await http('me', {token})\r\n        user = data.user\r\n    }\r\n    return user\r\n}\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n    const {data: user, error, isLoading, isIdle, isError, run, setData: setUser} = useAsync<User | null>();\r\n    const queryClient = useQueryClient()\r\n    // point free\r\n    const login = (form: AuthForm) => auth.login(form).then(setUser);\r\n    const register = (form: AuthForm) => auth.register(form).then(setUser);\r\n    const logout = () => auth.logout().then(() => {\r\n        setUser(null)\r\n        queryClient.clear()\r\n    });\r\n    useMount(() => {\r\n        run(bootstrapUser())\r\n    })\r\n    if (isIdle || isLoading) {\r\n        return <p>loading...</p>\r\n    }\r\n    if (error) {\r\n        return <FullPageErrorFallback error={error}/>\r\n    }\r\n\r\n    return <AuthContext.Provider children={children} value={{ user, login, register, logout }}/>\r\n}\r\n\r\nexport const useAuth = () => {\r\n    const context = React.useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error(\"useAuth必须在AuthProvider中使用\");\r\n    }\r\n    return context;\r\n};","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\authenticated-app.tsx",["212","213"],"import React, {useState} from \"react\";\r\nimport { ProjectListScreen } from \"screens/project-list\";\r\nimport {ProjectScreen} from \"./screens/project\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport styled from \"@emotion/styled\";\r\nimport {ButtonNoPadding, Row} from \"components/lib\";\r\nimport { ReactComponent as SoftwareLogo } from \"assets/software-logo.svg\";\r\nimport { Button, Dropdown, Menu } from \"antd\";\r\nimport { Route, Routes, Navigate } from 'react-router'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { resetRoute } from \"utils\";\r\nimport {ProjectModal} from \"./screens/project-list/project-modal\";\r\nimport {ProjectPopover} from \"./components/project-popover\";\r\nimport {UserPopover} from \"./components/user-popover\";\r\n\r\n/**\r\n * grid 和 flex 各自的应用场景\r\n * 1. 要考虑，是一维布局 还是 二维布局\r\n * 一般来说，一维布局用flex，二维布局用grid\r\n * 2. 是从内容出发还是从布局出发？\r\n * 从内容出发：你先有一组内容(数量一般不固定),然后希望他们均匀的分布在容器中，由内容自己的大小决定占据的空间\r\n * 从布局出发：先规划网格(数量一般比较固定)，然后再把元素往里填充\r\n * 从内容出发，用flex\r\n * 从布局出发，用grid\r\n *\r\n */\r\n\r\nexport const AuthenticatedApp = () => {\r\n    const [projectModalOpen, setProjectModalOpen] = useState(false)\r\n\r\n    return (\r\n        <Container>\r\n            <Router>\r\n            <PageHeader />\r\n            <Main>\r\n                    <Routes>\r\n                        <Route path={'/projects'} element={<ProjectListScreen/>}/>\r\n                        <Route path={'/projects/:projectId/*'} element={<ProjectScreen/>}/>\r\n                        <Navigate to={'/projects'}/>\r\n                    </Routes>\r\n            </Main>\r\n            <ProjectModal/>\r\n        </Router>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst PageHeader = () => {\r\n    return <Header between={true}>\r\n        <HeaderLeft gap={true}>\r\n            <ButtonNoPadding  type={\"link\"} onClick={resetRoute}>\r\n                <SoftwareLogo width={\"18rem\"} color={\"rgb(38, 132, 255)\"} />\r\n            </ButtonNoPadding>\r\n            <ProjectPopover />\r\n            <UserPopover/>\r\n        </HeaderLeft>\r\n        <HeaderRight>\r\n            <User/>\r\n        </HeaderRight>\r\n    </Header>\r\n}\r\n\r\nconst User = () => {\r\n    const { logout, user } = useAuth();\r\n    return <Dropdown overlay={\r\n        <Menu>\r\n            <Menu.Item key={'logout'}>\r\n                <Button onClick={logout} type={\"link\"}>\r\n                    登出\r\n                </Button>\r\n            </Menu.Item>\r\n        </Menu>\r\n    }>\r\n        <Button type={\"link\"} onClick={(e) => e.preventDefault()}>\r\n            Hi, {user?.name}\r\n        </Button>\r\n    </Dropdown>\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 6rem 1fr;\r\n  height: 100vh;\r\n`;\r\n\r\n// grid-area 用来给grid子元素起名字\r\nconst Header = styled(Row)`\r\n  padding: 3.2rem;\r\n  box-shadow: 0 0 5px 0 rgba(0,0,0,0);\r\n  z-index: 1;\r\n`;\r\nconst HeaderLeft = styled(Row)``;\r\nconst HeaderRight = styled.div``;\r\nconst Main = styled.main`\r\n  //display: flex;\r\n  overflow: hidden;\r\n`;","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\auth-provider.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\index.tsx",["214","215"],"import React, {useState} from \"react\"\r\nimport {RegisterScreen} from \"unauthenticated-app/register\";\r\nimport {LoginScreen} from \"unauthenticated-app/login\";\r\nimport {Card, Divider, Button, Typography} from 'antd'\r\nimport styled from '@emotion/styled'\r\nimport logo from 'assets/logo.svg'\r\nimport left from 'assets/left.svg'\r\nimport right from 'assets/right.svg'\r\nimport {Helmet} from 'react-helmet'\r\nimport {useDocumentTitle} from \"../utils\";\r\nimport {ErrorBox} from \"../components/lib\";\r\n\r\nexport const UnauthenticatedApp = () => {\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [error, setError] = useState<Error | null>(null)\r\n    useDocumentTitle('请登录注册以继续')\r\n    return <div style={{display:'flex', justifyContent:'center'}}>\r\n        <Container>\r\n            <Header/>\r\n            <Background/>\r\n        <ShadowCard>\r\n            <Title>\r\n                {isRegister ? '请注册':'请登录'}\r\n                <ErrorBox error={error}/>\r\n            </Title>\r\n        {\r\n            isRegister ? <RegisterScreen onError={setError}/> : <LoginScreen onError={setError}/>\r\n        }\r\n        <Divider/>\r\n            <Button type = {\"link\"} onClick={() => setIsRegister(!isRegister)}>切换到{isRegister ? '登录' : '没有帐户，这里注册'}</Button>\r\n        </ShadowCard>\r\n        </Container>\r\n    </div>\r\n}\r\n\r\nexport const LongButton = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 2.4rem;\r\n  color: rgb(94, 108, 132);\r\n`;\r\n\r\nconst Background = styled.div `\r\n    position:absolute;;\r\n  width:100%;\r\n  height:100%;\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n  background-position: left bottom, right, bottom;\r\n  background-size: calc(((100vw - 40rem) / 2) - 3.2rem), calc(((100vw - 40rem) / 2) - 3.2rem), cover;\r\n  background-image: url(${left}), url(${right});\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex; \r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  `\r\n\r\nconst ShadowCard = styled(Card)`\r\n  width:40rem;\r\n  min-height:56rem;\r\n  padding:3.2rem 4rem;\r\n  box-sizing:border-box;\r\n  box-shadow: raba(0,0,0,0.1) 0 0 10px;\r\n  text-align: center;\r\n`\r\n\r\nconst Header = styled.header `\r\n  background: url(${logo}) no-repeat center;\r\n  padding: 5rem 0;\r\n  background-size: 8rem;\r\n  width: 100%;\r\n`","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\login.tsx",["216","217","218","219"],"import React, {FormEvent} from \"react\";\r\nimport {useAuth} from \"context/auth-context\";\r\nimport {Form, Button, Input} from 'antd'\r\nimport {LongButton} from \"./index\";\r\nimport {useAsync} from \"../utils/use-async\";\r\nimport {throws} from \"assert\";\r\n\r\nexport const LoginScreen = ({onError}:{onError : (error :Error) => void}) => {\r\n    const {login, user} = useAuth();\r\n    const {run, isLoading} = useAsync(undefined, {throwOnError: true});\r\n    const handleSubmit = async (values: {username: string, password:string}) => {\r\n        try {\r\n            await run(login(values))\r\n        } catch (e) {\r\n            onError(e)\r\n        }\r\n    }\r\n    return (<Form onFinish={handleSubmit}>\r\n            <Form.Item name={'username'} rules={[{required:true, message:'请输入用户名'}]}>\r\n                <Input placeholder=\"username\" type=\"text\" id={\"username\"}/>\r\n            </Form.Item>\r\n            <Form.Item name= {'password'} rules={[{required:true, message:'请输入密码'}]}>\r\n                <Input placeholder=\"password\" type=\"password\" id={\"password\"}/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <LongButton loading={isLoading} htmlType={'submit'} type={\"primary\"}>登录</LongButton>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\unauthenticated-app\\register.tsx",["220","221","222","223"],"import React, {FormEvent} from \"react\";\r\nimport {useAuth} from \"context/auth-context\";\r\nimport {Form, Button, Input} from 'antd'\r\nimport {LongButton} from \"./index\";\r\nimport {useAsync} from \"../utils/use-async\";\r\n\r\nexport const RegisterScreen = ({onError}:{onError : (error :Error) => void}) => {\r\n    const {register, user} = useAuth();\r\n    const {run, isLoading} = useAsync(undefined, {throwOnError: true});\r\n    const handleSubmit = async ({cpassword, ...values}: {username: string, password:string, cpassword: string}) => {\r\n        if (cpassword !== values.password) {\r\n            onError(new Error('请确认两次输入的密码相同'))\r\n            return\r\n        }\r\n        try {\r\n            await run(register(values));\r\n        } catch (e) {\r\n            onError(e)\r\n        }\r\n    }\r\n    return (<Form onFinish={handleSubmit}>\r\n            <Form.Item name={'username'} rules={[{required:true, message:'请输入用户名'}]}>\r\n                <Input placeholder=\"username\" type=\"text\" id={\"username\"}/>\r\n            </Form.Item>\r\n            <Form.Item name= {'password'} rules={[{required:true, message:'请输入密码'}]}>\r\n                <Input placeholder=\"password\" type=\"password\" id={\"password\"}/>\r\n            </Form.Item>\r\n            <Form.Item name= {'cpassword'} rules={[{required:true, message:'请确认密码'}]}>\r\n                <Input placeholder=\"cpassword\" type=\"password\" id={\"cpassword\"}/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <LongButton htmlType={'submit'} type={\"primary\"}>注册</LongButton>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\index.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\http.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\lib.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\user.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\project.ts",["224"],"import { useHttp } from \"utils/http\";\r\nimport {QueryKey, useMutation, useQuery, useQueryClient} from \"react-query\";\r\nimport {useAddConfig, useDeleteConfig, useEditConfig} from \"./use-optimistic-opinion\";\r\nimport {Project} from \"../types/project\";\r\n\r\nexport const useProjects = (param?: Partial<Project>) => {\r\n    const client = useHttp();\r\n    return useQuery<Project[]>(['projects', param], () => client('projects', {data: param}))\r\n};\r\n\r\nexport const useEditProject = (queryKey: QueryKey) => {\r\n    const client = useHttp()\r\n    return useMutation((params: Partial<Project>) => client(`projects/${params.id}`, {\r\n        method: 'PATCH',  data:params,\r\n    }),\r\n        useEditConfig(queryKey)\r\n    )\r\n}\r\n\r\nexport const useAddProject = (queryKey: QueryKey) => {\r\n    const client = useHttp()\r\n    return useMutation((params: Partial<Project>) => client(`projects`, {\r\n            data:params,\r\n            method: 'POST',\r\n        }),\r\n        useAddConfig(queryKey)\r\n    )\r\n}\r\n\r\nexport const useDeleteProject = (queryKey: QueryKey) => {\r\n    const client = useHttp()\r\n    return useMutation(({id} : {id: number}) => client(`projects${id}`, {\r\n            method: 'DELETE',\r\n        }),\r\n        useDeleteConfig(queryKey)\r\n    )\r\n}\r\n\r\nexport const useProject = (id?: number) => {\r\n    const client = useHttp();\r\n    return useQuery<Project>(\r\n        [\"project\", { id }],\r\n        () => client(`projects/${id}`),\r\n        {\r\n            enabled: Boolean(id),\r\n        }\r\n    );\r\n};","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\use-async.ts",["225"],"import {useCallback, useReducer, useState} from \"react\";\r\nimport {useMountedRef} from \"./index\";\r\n\r\n\r\ninterface State<D> {\r\n    error: Error | null;\r\n    data: D | null;\r\n    stat: 'idle' | 'loading' | 'error' | 'success'\r\n}\r\n\r\nconst defaultInitialState: State<null> = {\r\n    stat:'idle',\r\n    data: null,\r\n    error: null\r\n}\r\n\r\nconst defaultConfig =  {\r\n    throwOnError:false\r\n}\r\n\r\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\r\n    const mountedRef = useMountedRef()\r\n    return useCallback((...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0), [dispatch, mountedRef])\r\n}\r\nexport const useAsync = <D>(initialState?: State<D>, initialConfig?: typeof  defaultConfig) => {\r\n    const config = {...defaultConfig, initialConfig}\r\n    const [state, dispatch] = useReducer((state:State<D>, action:Partial<State<D>>) => ({...state, ...action}),{\r\n        ...defaultInitialState,\r\n        ...initialState\r\n    })\r\n    const safeDispatch = useSafeDispatch(dispatch)\r\n    const [retry, setRetry] = useState(() => () => {\r\n\r\n    })\r\n\r\n    const setData = useCallback((data: D) => safeDispatch({\r\n         data,\r\n        stat: 'success',\r\n        error: null\r\n    }), [safeDispatch])\r\n\r\n    const setError = useCallback((error:Error) => safeDispatch({\r\n        error,\r\n        stat: 'error',\r\n        data: null\r\n    }), [safeDispatch])\r\n    //run 用来触发异步请求\r\n    const run = useCallback((\r\n        (promise: Promise<D>, runConfig?: {retry: () => Promise<D>}) => {\r\n            if (!promise || !promise.then) {\r\n                throw new Error('请传入Promise类型数据')\r\n            }\r\n            setRetry(() => () => {\r\n                if (runConfig?.retry) {\r\n                    run(runConfig?.retry(), runConfig)\r\n                }\r\n            })\r\n            safeDispatch({stat:'loading'})\r\n            return promise.then(data => {\r\n                setData(data)\r\n                return data\r\n            }).catch(error => {\r\n                // catch会消化异常，如果不抛出，外面收不到\r\n                setError(error)\r\n                if (config.throwOnError) Promise.reject(error);\r\n                return error;\r\n            })\r\n        }\r\n    ), [config.throwOnError, setData, setError])\r\n\r\n    return {\r\n        isIdle:state.stat === 'idle',\r\n        isLoading: state.stat === 'loading',\r\n        isError:state.stat === 'error',\r\n        isSuccess: state.stat === 'success',\r\n        run,\r\n        setData,\r\n        setError,\r\n        //retry调用后再跑一边run\r\n        retry,\r\n        ...state\r\n    }\r\n}","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project\\index.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\index.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\epic\\index.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\url.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\util.ts",["226","227","228","229","230"],"import {useSetUrlSearchParam, useUrlQueryParam} from \"utils/url\";\r\nimport {useMemo, useState} from \"react\";\r\nimport {useProject} from \"../../utils/project\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\n\r\n// 项目列表搜索的参数\r\nexport const useProjectsSearchParams = () => {\r\n    const [param, setParam] = useUrlQueryParam([\"name\", \"personId\"]);\r\n    return [\r\n        useMemo(\r\n            () => ({ ...param, personId: Number(param.personId) || undefined }),\r\n            [param]\r\n        ),\r\n        setParam,\r\n    ] as const;\r\n};\r\nexport const useProjectsQueryKey = () => {\r\n    const [params] = useProjectsSearchParams()\r\n    return ['projects', params]}\r\n//全局状态管理器\r\nexport const useProjectModal = () => {\r\n    const [{projectCreate}, setProjectCreate] = useUrlQueryParam([\r\n        'projectCreate'\r\n    ])\r\n    const [{editingProjectId}, setEditingProjectId] = useUrlQueryParam([\r\n        'editingProjectId'\r\n    ])\r\n    const  setUrlParams = useSetUrlSearchParam()\r\n    const {data: editingProject, isLoading} = useProject(Number(editingProjectId))\r\n    const open = () => setProjectCreate({projectCreate: true})\r\n    const close = () => setUrlParams({ projectCreate: \"\", editingProjectId: \"\" })\r\n    const startEdit = (id: number) => setEditingProjectId({editingProjectId: id})\r\n\r\n    return {\r\n        projectModalOpen: projectCreate === 'true' || Boolean(editingProjectId),\r\n        open,\r\n        close,\r\n        startEdit,\r\n        editingProject,\r\n        isLoading,\r\n    }\r\n}\r\n\r\nconst useTest = () => {\r\n    const {open: openModal} = useProjectModal()\r\n    const [a, setA] = useState()\r\n}\r\n","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\pin.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\project-popover.tsx",["231"],"import React from \"react\";\r\nimport {Popover, List, Typography, Divider, Button} from \"antd\";\r\nimport {useProjects} from \"../utils/project\";\r\nimport styled from \"@emotion/styled\";\r\nimport {ButtonNoPadding} from \"./lib\";\r\nimport {useProjectModal} from \"../screens/project-list/util\";\r\n\r\nexport const ProjectPopover = () => {\r\n    const {open} = useProjectModal()\r\n    const { data: projects, refetch } = useProjects();\r\n    const pinnedProjects = projects?.filter((project) => project.pin)\r\n\r\n    const content =(\r\n        <ContentContainer>\r\n        <Typography.Text type={\"secondary\"}>收藏项目</Typography.Text>\r\n        <List>\r\n            {\r\n                pinnedProjects?.map(project => <List.Item>\r\n                    <List.Item.Meta title = {project.name}/>\r\n                </List.Item>)\r\n            }\r\n        </List>\r\n        <Divider/>\r\n        <ButtonNoPadding onClick={open} type={\"link\"}>创建项目</ButtonNoPadding>\r\n    </ContentContainer>\r\n    )\r\n    return(\r\n        <Popover\r\n            onVisibleChange={() => refetch()}\r\n            placement={\"bottom\"}\r\n            content={content}\r\n        >\r\n            <span>项目</span>\r\n        </Popover>\r\n    )\r\n}\r\n\r\nconst ContentContainer = styled.div`\r\n  min-width: 30rem;\r\n`;","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\project-list\\project-modal.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\user-select.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\id-select.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\use-optimistic-opinion.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\util.ts",["232","233","234"],"import {useLocation} from \"react-router\";\r\nimport React, {useCallback, useMemo} from \"react\"\r\nimport {useProject} from \"../../utils/project\";\r\nimport {useUrlQueryParam} from \"../../utils/url\";\r\nimport {useTask} from \"../../utils/task\";\r\nimport {useDebounce} from \"../../utils\";\r\n\r\nexport const useProjectIdInUrl = () => {\r\n    const {pathname} = useLocation()\r\n    const id = pathname.match(/projects\\/(d+)/)?.[1]\r\n    return Number(id)\r\n}\r\n\r\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl())\r\n\r\nexport const useKanbanSearchParams = () => ({\r\n    projectId: useProjectIdInUrl()\r\n})\r\n\r\nexport const useKanbansQueryKey = () => ['kanbans', useKanbanSearchParams()]\r\n\r\nexport const useTasksSearchParams = () => {\r\n    const [param, setParam] = useUrlQueryParam([\r\n        'name',\r\n        'typeId',\r\n        'processorId',\r\n        'tagId'\r\n    ])\r\n    const projectId = useProjectIdInUrl()\r\n    const debounceName = useDebounce(param.name, 200)\r\n    return useMemo(() => ({\r\n        projectId,\r\n        typeId: Number(param.typeId) || undefined,\r\n        processorId: Number(param.processorId) || undefined,\r\n        tagId: Number(param.tagId) || undefined,\r\n        name: debounceName,\r\n    }), [projectId, debounceName])\r\n}\r\n\r\nexport const useTasksQueryKey = () =>['tasks', useTasksSearchParams()]\r\n\r\nexport const useTasksModal = () => {\r\n    const [{editingTaskId}, setEditingTaskId] = useUrlQueryParam(['editingTaskId'])\r\n    const {data: editingTask, isLoading} = useTask(Number(editingTaskId))\r\n    const startEdit = useCallback((id: number) => {\r\n        setEditingTaskId({editingTaskId: id})\r\n    }, [setEditingTaskId])\r\n    const close = useCallback(() => {\r\n        setEditingTaskId({editingTaskId: ''})\r\n    }, [setEditingTaskId])\r\n    return {\r\n        editingTaskId,\r\n        editingTask,\r\n        startEdit,\r\n        close,\r\n        isLoading\r\n    }\r\n}\r\n\r\n","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\kanban.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\kanban-column.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\task.ts",["235"],"import {useHttp} from \"./http\";\r\nimport {QueryKey, useMutation, useQuery} from \"react-query\";\r\nimport {Task} from \"../types/task\";\r\nimport {\r\n    useAddConfig,\r\n    useDeleteConfig,\r\n    useEditConfig,\r\n    useReorderTaskConfig\r\n} from \"./use-optimistic-opinion\";\r\nimport {Project} from \"../types/project\";\r\nimport {SortProps} from \"./kanban\";\r\n\r\nexport const useTasks = (param?: Partial<Task>) => {\r\n    const client = useHttp();\r\n    return useQuery<Task[]>(['tasks', param], () => client('tasks', {data: param}))\r\n};\r\n\r\nexport const useAddTask = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n\r\n    return useMutation(\r\n        (params: Partial<Task>) =>\r\n            client(`tasks`, {\r\n                data: params,\r\n                method: \"POST\",\r\n            }),\r\n        useAddConfig(queryKey)\r\n    );\r\n};\r\n\r\nexport const useTask = (id?: number) => {\r\n    const client = useHttp()\r\n    return useQuery<Project>(\r\n        [\"project\", {id}],\r\n        () => client(`projects/${id}`),\r\n    {\r\n        enabled: Boolean(id),\r\n    }\r\n    )\r\n}\r\n\r\nexport const useEditTask = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n    return useMutation(\r\n        (params: Partial<Task>) =>\r\n            client(`tasks/${params.id}`, {\r\n                method: \"PATCH\",\r\n                data: params,\r\n            }),\r\n        useEditConfig(queryKey)\r\n    );\r\n};\r\n\r\nexport const useDeleteTask = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n\r\n    return useMutation(\r\n        ({ id }: { id: number }) =>\r\n            client(`tasks/${id}`, {\r\n                method: \"DELETE\",\r\n            }),\r\n        useDeleteConfig(queryKey)\r\n    );\r\n};\r\n\r\nexport const useReorderTask = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n    return useMutation((params: SortProps) => {\r\n        return client(\"tasks/reorder\", {\r\n            data: params,\r\n            method: \"POST\",\r\n        });\r\n    },  useReorderTaskConfig(queryKey));\r\n};","C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\task-type.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\search-panel.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\task-type-select.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\create-kanban.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\task-modal.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\kanban\\create-task.tsx",[],["236","237"],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\mark.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\drag-and-drop.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\reorder.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\utils\\epic.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\epic\\util.ts",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\screens\\epic\\create-epic.tsx",[],"C:\\Users\\Larkl\\WebstormProjects\\jira\\src\\components\\user-popover.tsx",[],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"246","line":5,"column":8,"nodeType":"244","messageId":"245","endLine":5,"endColumn":14},{"ruleId":"242","severity":1,"message":"247","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":30},{"ruleId":"242","severity":1,"message":"243","line":1,"column":43,"nodeType":"244","messageId":"245","endLine":1,"endColumn":51},{"ruleId":"242","severity":1,"message":"248","line":6,"column":32,"nodeType":"244","messageId":"245","endLine":6,"endColumn":47},{"ruleId":"242","severity":1,"message":"249","line":37,"column":50,"nodeType":"244","messageId":"245","endLine":37,"endColumn":57},{"ruleId":"242","severity":1,"message":"250","line":29,"column":12,"nodeType":"244","messageId":"245","endLine":29,"endColumn":28},{"ruleId":"242","severity":1,"message":"251","line":29,"column":30,"nodeType":"244","messageId":"245","endLine":29,"endColumn":49},{"ruleId":"242","severity":1,"message":"252","line":4,"column":32,"nodeType":"244","messageId":"245","endLine":4,"endColumn":42},{"ruleId":"242","severity":1,"message":"253","line":9,"column":9,"nodeType":"244","messageId":"245","endLine":9,"endColumn":15},{"ruleId":"242","severity":1,"message":"254","line":1,"column":16,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"255","line":3,"column":15,"nodeType":"244","messageId":"245","endLine":3,"endColumn":21},{"ruleId":"242","severity":1,"message":"256","line":6,"column":9,"nodeType":"244","messageId":"245","endLine":6,"endColumn":15},{"ruleId":"242","severity":1,"message":"257","line":9,"column":19,"nodeType":"244","messageId":"245","endLine":9,"endColumn":23},{"ruleId":"242","severity":1,"message":"254","line":1,"column":16,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"255","line":3,"column":15,"nodeType":"244","messageId":"245","endLine":3,"endColumn":21},{"ruleId":"242","severity":1,"message":"257","line":8,"column":22,"nodeType":"244","messageId":"245","endLine":8,"endColumn":26},{"ruleId":"242","severity":1,"message":"258","line":9,"column":17,"nodeType":"244","messageId":"245","endLine":9,"endColumn":26},{"ruleId":"242","severity":1,"message":"259","line":2,"column":42,"nodeType":"244","messageId":"245","endLine":2,"endColumn":56},{"ruleId":"260","severity":1,"message":"261","line":69,"column":8,"nodeType":"262","endLine":69,"endColumn":48,"suggestions":"263"},{"ruleId":"242","severity":1,"message":"264","line":4,"column":9,"nodeType":"244","messageId":"245","endLine":4,"endColumn":24},{"ruleId":"242","severity":1,"message":"265","line":44,"column":7,"nodeType":"244","messageId":"245","endLine":44,"endColumn":14},{"ruleId":"242","severity":1,"message":"266","line":45,"column":18,"nodeType":"244","messageId":"245","endLine":45,"endColumn":27},{"ruleId":"242","severity":1,"message":"267","line":46,"column":12,"nodeType":"244","messageId":"245","endLine":46,"endColumn":13},{"ruleId":"242","severity":1,"message":"268","line":46,"column":15,"nodeType":"244","messageId":"245","endLine":46,"endColumn":19},{"ruleId":"242","severity":1,"message":"255","line":2,"column":45,"nodeType":"244","messageId":"245","endLine":2,"endColumn":51},{"ruleId":"242","severity":1,"message":"269","line":2,"column":8,"nodeType":"244","messageId":"245","endLine":2,"endColumn":13},{"ruleId":"242","severity":1,"message":"270","line":23,"column":19,"nodeType":"244","messageId":"245","endLine":23,"endColumn":27},{"ruleId":"260","severity":1,"message":"271","line":37,"column":9,"nodeType":"262","endLine":37,"endColumn":34,"suggestions":"272"},{"ruleId":"242","severity":1,"message":"273","line":8,"column":5,"nodeType":"244","messageId":"245","endLine":8,"endColumn":21},{"ruleId":"238","replacedBy":"274"},{"ruleId":"240","replacedBy":"275"},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","'ProviderProps' is defined but never used.","'FullPageLoading' is defined but never used.","'isError' is assigned a value but never used.","'projectModalOpen' is assigned a value but never used.","'setProjectModalOpen' is assigned a value but never used.","'Typography' is defined but never used.","'Helmet' is defined but never used.","'FormEvent' is defined but never used.","'Button' is defined but never used.","'throws' is defined but never used.","'user' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'useQueryClient' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'safeDispatch'. Either include it or remove the dependency array.","ArrayExpression",["278"],"'useSearchParams' is defined but never used.","'useTest' is assigned a value but never used.","'openModal' is assigned a value but never used.","'a' is assigned a value but never used.","'setA' is assigned a value but never used.","'React' is defined but never used.","'setParam' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'param.processorId', 'param.tagId', and 'param.typeId'. Either include them or remove the dependency array.",["279"],"'useReorderConfig' is defined but never used.",["276"],["277"],"no-global-assign","no-unsafe-negation",{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [config.throwOnError, safeDispatch, setData, setError]",{"range":"284","text":"285"},"Update the dependencies array to be: [projectId, param.typeId, param.processorId, param.tagId, debounceName]",{"range":"286","text":"287"},[2156,2196],"[config.throwOnError, safeDispatch, setData, setError]",[1212,1237],"[projectId, param.typeId, param.processorId, param.tagId, debounceName]"]